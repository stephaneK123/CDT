[{"C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\index.js":"1","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\App.js":"2","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\LoginForm\\LoginForm.jsx":"3","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\ChatSettings\\ChatSettings.js":"4","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\ChatSettings\\List\\ListsSettings.js":"5","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\ChatSettings\\Poll\\PollSettings.js":"6","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\ChatSettings\\Poll\\SettingsBlock.js":"7","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\helper\\MediaCard.js":"8","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\helper\\EmailSender.js":"9"},{"size":151,"mtime":1638397358761,"results":"10","hashOfConfig":"11"},{"size":4950,"mtime":1638848272450,"results":"12","hashOfConfig":"11"},{"size":1946,"mtime":1638469203237,"results":"13","hashOfConfig":"11"},{"size":2430,"mtime":1638469203235,"results":"14","hashOfConfig":"11"},{"size":2981,"mtime":1638663892780,"results":"15","hashOfConfig":"11"},{"size":1061,"mtime":1638663892780,"results":"16","hashOfConfig":"11"},{"size":1536,"mtime":1638469203236,"results":"17","hashOfConfig":"11"},{"size":927,"mtime":1638849157399,"results":"18","hashOfConfig":"11"},{"size":282,"mtime":1638833905879,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"f1gtcm",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\index.js",[],["41","42"],"C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\App.js",["43","44","45","46","47"],"C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\LoginForm\\LoginForm.jsx",[],"C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\ChatSettings\\ChatSettings.js",[],"C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\ChatSettings\\List\\ListsSettings.js",["48","49"],"import React, { useContext } from 'react'\r\nimport { ChatEngineContext, Button } from 'react-chat-engine'\r\nimport SettingsBlock from '../Poll/SettingsBlock'\r\nimport {Card, Form, Row, Col} from 'react-bootstrap';\r\n\r\n\r\nconst ListsSettings = () => {\r\n    const { chats, activeChat } = useContext(ChatEngineContext)  \r\n    const chat = chats && chats[activeChat] \r\n\r\n    const [todos, setTodos] = React.useState([\r\n        {\r\n          text: \"This is a list item\",\r\n          isDone: false\r\n        }\r\n      ]);\r\n    \r\n      const addTodo = text => {\r\n        const newTodos = [...todos, { text }];\r\n        setTodos(newTodos);\r\n      };\r\n    \r\n      const markTodo = index => {\r\n        const newTodos = [...todos];\r\n        newTodos[index].isDone = true;\r\n        setTodos(newTodos);\r\n      };\r\n    \r\n      const removeTodo = index => {\r\n        const newTodos = [...todos];\r\n        newTodos.splice(index, 1);\r\n        setTodos(newTodos);\r\n      };\r\n\r\n    if (!chat) return <div />\r\n\r\n    function Todo({ todo, index, markTodo, removeTodo }) {\r\n        return (\r\n          <div\r\n            className=\"todo\"\r\n          >\r\n            <span style={{ textDecoration: todo.isDone ? \"line-through\" : \"\" }}>{todo.text}</span>\r\n            <div>\r\n              <Button  onClick={() => markTodo(index)} value=\"âœ“\" />\r\n              <Button  onClick={() => removeTodo(index)} value=\"X\" />\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      \r\n      function FormTodo({ addTodo }) {\r\n        const [value, setValue] = React.useState(\"\");\r\n      \r\n        const handleSubmit = e => {\r\n          e.preventDefault();\r\n          if (!value) return;\r\n          addTodo(value);\r\n          setValue(\"\");\r\n        };\r\n      \r\n        return (\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Label>The List</Form.Label>\r\n             <Form.Group>\r\n                 <Form.Control style={{ height: '10px'}}type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)} placeholder=\"Add new item\" />\r\n                 <Button type=\"submit\" value=\"Add Item\" /> \r\n             </Form.Group>\r\n          </Form>\r\n        );\r\n      }\r\n\r\n    return (\r\n        <div style={{ borderTop: '2px solid #f0f0f0' }} className='ce-photo-section'>\r\n            <SettingsBlock\r\n                label='Lists'\r\n                className='ce-section-title-container ce-photo-title-container'\r\n            >\r\n\r\n<div className=\"container\">\r\n        <FormTodo addTodo={addTodo} />\r\n        <div>\r\n          {todos.map((todo, index) => (\r\n            <Card>\r\n              <Card.Body>\r\n                <Todo\r\n                key={index}\r\n                index={index}\r\n                todo={todo}\r\n                markTodo={markTodo}\r\n                removeTodo={removeTodo}\r\n                />\r\n              </Card.Body>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n            </SettingsBlock>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListsSettings","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\ChatSettings\\Poll\\PollSettings.js",[],"C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\ChatSettings\\Poll\\SettingsBlock.js",[],"C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\helper\\MediaCard.js",["50","51","52","53"],"C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\helper\\EmailSender.js",["54","55","56"],"// made w <3 Sk 12/4/21\r\nimport React from \"react\";\r\nimport { ChatEngine, ChatEngineWrapper } from \"react-chat-engine\";\r\n\r\nconst EmailSender = () => {\r\n    //logic here \r\n\r\n    return (\r\n        console.log(\"testing email sender\")\r\n\r\n    )\r\n\r\n}\r\n\r\nexport { EmailSender }\r\n\r\n\r\n\r\n\r\n\r\n",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":6,"column":8,"nodeType":"63","messageId":"64","endLine":6,"endColumn":17},{"ruleId":"61","severity":1,"message":"65","line":12,"column":10,"nodeType":"63","messageId":"64","endLine":12,"endColumn":21},{"ruleId":"61","severity":1,"message":"66","line":13,"column":10,"nodeType":"63","messageId":"64","endLine":13,"endColumn":21},{"ruleId":"61","severity":1,"message":"67","line":14,"column":8,"nodeType":"63","messageId":"64","endLine":14,"endColumn":13},{"ruleId":"61","severity":1,"message":"68","line":15,"column":10,"nodeType":"63","messageId":"64","endLine":15,"endColumn":16},{"ruleId":"61","severity":1,"message":"69","line":4,"column":21,"nodeType":"63","messageId":"64","endLine":4,"endColumn":24},{"ruleId":"61","severity":1,"message":"70","line":4,"column":26,"nodeType":"63","messageId":"64","endLine":4,"endColumn":29},{"ruleId":"61","severity":1,"message":"71","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":19},{"ruleId":"61","severity":1,"message":"72","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":17},{"ruleId":"61","severity":1,"message":"73","line":6,"column":8,"nodeType":"63","messageId":"64","endLine":6,"endColumn":14},{"ruleId":"74","severity":1,"message":"75","line":18,"column":34,"nodeType":"76","messageId":"77","endLine":18,"endColumn":35},{"ruleId":"61","severity":1,"message":"78","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":13},{"ruleId":"61","severity":1,"message":"79","line":3,"column":10,"nodeType":"63","messageId":"64","endLine":3,"endColumn":20},{"ruleId":"61","severity":1,"message":"80","line":3,"column":22,"nodeType":"63","messageId":"64","endLine":3,"endColumn":39},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'LoginForm' is defined but never used.","Identifier","unusedVar","'EmailSender' is defined but never used.","'sendMessage' is defined but never used.","'axios' is defined but never used.","'Report' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'CardActions' is defined but never used.","'CardMedia' is defined but never used.","'Button' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'React' is defined but never used.","'ChatEngine' is defined but never used.","'ChatEngineWrapper' is defined but never used.","no-global-assign","no-unsafe-negation"]