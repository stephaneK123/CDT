[{"C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\index.js":"1","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\App.js":"2","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\LoginForm\\LoginForm.jsx":"3","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\ChatSettings\\ChatSettings.js":"4","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\ChatSettings\\List\\ListsSettings.js":"5","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\ChatSettings\\Poll\\PollSettings.js":"6","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\ChatSettings\\Poll\\SettingsBlock.js":"7","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\helper\\MediaCard.js":"8","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\helper\\EmailSender.js":"9","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\helper\\OnetoOne.js":"10","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\helper\\Accordion_mini.js":"11","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\helper\\Input.js":"12","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\helper\\LDialog.js":"13","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\helper\\sendSKMsg.js":"14","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\helper\\ShowLogo.js":"15","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\helper\\GoodList.js":"16"},{"size":151,"mtime":1638397358761,"results":"17","hashOfConfig":"18"},{"size":2520,"mtime":1638991345190,"results":"19","hashOfConfig":"18"},{"size":1946,"mtime":1638469203237,"results":"20","hashOfConfig":"18"},{"size":2653,"mtime":1638979092391,"results":"21","hashOfConfig":"18"},{"size":2981,"mtime":1638663892780,"results":"22","hashOfConfig":"18"},{"size":1061,"mtime":1638663892780,"results":"23","hashOfConfig":"18"},{"size":1536,"mtime":1638469203236,"results":"24","hashOfConfig":"18"},{"size":975,"mtime":1638918545755,"results":"25","hashOfConfig":"18"},{"size":282,"mtime":1638833905879,"results":"26","hashOfConfig":"18"},{"size":661,"mtime":1638977376159,"results":"27","hashOfConfig":"18"},{"size":2666,"mtime":1638977462949,"results":"28","hashOfConfig":"18"},{"size":993,"mtime":1638927958344,"results":"29","hashOfConfig":"18"},{"size":1280,"mtime":1638928854171,"results":"30","hashOfConfig":"18"},{"size":1371,"mtime":1638978785015,"results":"31","hashOfConfig":"18"},{"size":458,"mtime":1638973118182,"results":"32","hashOfConfig":"18"},{"size":571,"mtime":1638977429011,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"f1gtcm",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\index.js",[],["76","77"],"C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\App.js",["78","79","80","81","82","83","84","85","86","87","88"],"/* This is the main app component for the ChatApp.\r\n   @author Phillip Vickers \r\n*/\r\n\r\nimport { ChatEngine } from \"react-chat-engine\";\r\nimport LoginForm from \"./components/LoginForm/LoginForm.jsx\";\r\nimport \"./App.css\";\r\nimport ChatSettings from \"./components/ChatSettings/ChatSettings\";\r\nimport MediaCard from \"./components/helper/MediaCard.js\";\r\nimport { EmailSender } from \"./components/helper/EmailSender.js\";\r\nimport { sendMessage } from \"react-chat-engine\";\r\nimport axios from \"axios\";\r\nimport { Report } from \"@material-ui/icons\";\r\nimport { Box } from \"@mui/system\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport SimpleAccordion from \"./components/helper/Accordion_mini.js\";\r\nimport DirectChatPage from \"./components/helper/OnetoOne.js\";\r\nimport { sendMsg, getChatID } from \"./components/helper/sendSKMsg.js\";\r\n\r\nconst App = () => {\r\n  // localStorage.clear()\r\n  if (!localStorage.getItem(\"username\")) return <LoginForm />;\r\n\r\n  return (\r\n    <ChatEngine\r\n      height=\"100vh\"\r\n      projectID=\"6c0acb84-1640-40bb-861c-7cb8cb4ac5e1\" //Project ID from the chatEngine.io project settings\r\n      // userName={localStorage.getItem('username')}       //userName- get from localstorage\r\n      // userSecret={localStorage.getItem('password')}     //userSecret- get from localstorage\r\n      userName=\"test\"\r\n      userSecret=\"1234\"\r\n      // audio for new messages\r\n      onNewMessage={() =>\r\n        new Audio(\r\n          \"https://chat-engine-assets.s3.amazonaws.com/click.mp3\"\r\n        ).play()\r\n      }\r\n      //sending a message from \"test\" to \"StephaneK\"\r\n      //this will trigger when \"StephaneK\" is connected\r\n\r\n      onConnect={(creds) => {\r\n        if (localStorage.getItem(\"welcome\") == \"true\") {\r\n          getChatID();\r\n        }\r\n        // sendMsg(77863);\r\n      }}\r\n      // one to one chat\r\n\r\n      // Chat List\r\n      // Chat Card\r\n\r\n      //New Chat Form\r\n      //   renderNewChatForm={(creds) => DirectChatPage(creds)}\r\n      //Chat Feed\r\n\r\n      //Chat Header\r\n\r\n      //Message Bubble\r\n\r\n      //Scroll Down Bar\r\n\r\n      //New Message Form\r\n\r\n      //Chat Settings\r\n\r\n      //Chat Settings Top\r\n\r\n      //People Settings\r\n\r\n      //Photo Settings\r\n      // renderPhotosSettings={(chat) => {}}\r\n      //Options Settings\r\n\r\n      //improved chat settings\r\n      renderChatSettings={(chatAppProps) => <ChatSettings {...chatAppProps} />}\r\n      //people's setting\r\n      renderPeopleSettings={(creds, chat) => {}}\r\n\r\n      //removing photos setion\r\n    />\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\LoginForm\\LoginForm.jsx",[],"C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\ChatSettings\\ChatSettings.js",["89","90","91"],"import React, { useContext } from \"react\";\r\n\r\nimport { ChatEngineContext, ChatEngineWrapper } from \"react-chat-engine\";\r\n\r\nimport { PeopleSettings } from \"react-chat-engine\";\r\nimport { PhotosSettings } from \"react-chat-engine\";\r\nimport { OptionsSettings } from \"react-chat-engine\";\r\nimport { ChatSettingsTop } from \"react-chat-engine\";\r\nimport PollSettings from \"./Poll/PollSettings\";\r\nimport ListsSettings from \"./List/ListsSettings\";\r\nimport DirectChatPage from \"../helper/OnetoOne\";\r\nimport SimpleAccordion from \"../helper/Accordion_mini\";\r\n// import ShowLogo from \"../helper/ShowLogo\";\r\nconst ChatSettings = (props) => {\r\n  const { conn, chats, activeChat } = useContext(ChatEngineContext);\r\n  const chat = chats && chats[activeChat];\r\n\r\n  if (conn === null) return <div />;\r\n  let people = [\"SeanG\", \"Stephane\", \"John\"];\r\n\r\n  <ChatEngineWrapper\r\n    onConnect={(creds) => {\r\n      debugger;\r\n      let x = 0;\r\n    }}\r\n  />;\r\n\r\n  return (\r\n    <>\r\n      <div style={styles.settingsContainer} className=\"ce-settings\">\r\n        <div\r\n          style={{ width: \"90%\", paddingLeft: \"5%\" }}\r\n          className=\"ce-settings-container\"\r\n        >\r\n          {props.renderChatSettingsTop ? (\r\n            props.renderChatSettingsTop(conn, chat)\r\n          ) : (\r\n            <ChatSettingsTop />\r\n            //improved\r\n            // <ShowLogo />\r\n          )}\r\n\r\n          {props.renderPeopleSettings ? (\r\n            props.renderPeopleSettings(conn, chat)\r\n          ) : (\r\n            <PeopleSettings />\r\n          )}\r\n\r\n          {props.renderPhotosSettings ? (\r\n            props.renderPhotosSettings(chat)\r\n          ) : (\r\n            <PhotosSettings />\r\n          )}\r\n\r\n          {props.renderPollSettings ? (\r\n            props.renderPollSettings(chat)\r\n          ) : (\r\n            // <PollSettings />\r\n\r\n            <SimpleAccordion title=\"People\" people={people} />\r\n          )}\r\n\r\n          {props.renderListsSettings ? (\r\n            props.renderListsSettings(chat)\r\n          ) : (\r\n            <ListsSettings />\r\n          )}\r\n\r\n          {conn && chat && conn.userName === chat.admin.username && (\r\n            <div>\r\n              {props.renderOptionsSettings ? (\r\n                props.renderOptionsSettings(conn, chat)\r\n              ) : (\r\n                <OptionsSettings />\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatSettings;\r\n\r\nconst styles = {\r\n  settingsContainer: {\r\n    height: \"100%\",\r\n    overflow: \"scroll\",\r\n    overflowX: \"hidden\",\r\n    borderLeft: \"1px solid #afafaf\",\r\n    backgroundColor: \"white\",\r\n    fontFamily: \"Avenir\",\r\n  },\r\n};\r\n","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\ChatSettings\\List\\ListsSettings.js",["92","93"],"import React, { useContext } from 'react'\r\nimport { ChatEngineContext, Button } from 'react-chat-engine'\r\nimport SettingsBlock from '../Poll/SettingsBlock'\r\nimport {Card, Form, Row, Col} from 'react-bootstrap';\r\n\r\n\r\nconst ListsSettings = () => {\r\n    const { chats, activeChat } = useContext(ChatEngineContext)  \r\n    const chat = chats && chats[activeChat] \r\n\r\n    const [todos, setTodos] = React.useState([\r\n        {\r\n          text: \"This is a list item\",\r\n          isDone: false\r\n        }\r\n      ]);\r\n    \r\n      const addTodo = text => {\r\n        const newTodos = [...todos, { text }];\r\n        setTodos(newTodos);\r\n      };\r\n    \r\n      const markTodo = index => {\r\n        const newTodos = [...todos];\r\n        newTodos[index].isDone = true;\r\n        setTodos(newTodos);\r\n      };\r\n    \r\n      const removeTodo = index => {\r\n        const newTodos = [...todos];\r\n        newTodos.splice(index, 1);\r\n        setTodos(newTodos);\r\n      };\r\n\r\n    if (!chat) return <div />\r\n\r\n    function Todo({ todo, index, markTodo, removeTodo }) {\r\n        return (\r\n          <div\r\n            className=\"todo\"\r\n          >\r\n            <span style={{ textDecoration: todo.isDone ? \"line-through\" : \"\" }}>{todo.text}</span>\r\n            <div>\r\n              <Button  onClick={() => markTodo(index)} value=\"✓\" />\r\n              <Button  onClick={() => removeTodo(index)} value=\"X\" />\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      \r\n      function FormTodo({ addTodo }) {\r\n        const [value, setValue] = React.useState(\"\");\r\n      \r\n        const handleSubmit = e => {\r\n          e.preventDefault();\r\n          if (!value) return;\r\n          addTodo(value);\r\n          setValue(\"\");\r\n        };\r\n      \r\n        return (\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Label>The List</Form.Label>\r\n             <Form.Group>\r\n                 <Form.Control style={{ height: '10px'}}type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)} placeholder=\"Add new item\" />\r\n                 <Button type=\"submit\" value=\"Add Item\" /> \r\n             </Form.Group>\r\n          </Form>\r\n        );\r\n      }\r\n\r\n    return (\r\n        <div style={{ borderTop: '2px solid #f0f0f0' }} className='ce-photo-section'>\r\n            <SettingsBlock\r\n                label='Lists'\r\n                className='ce-section-title-container ce-photo-title-container'\r\n            >\r\n\r\n<div className=\"container\">\r\n        <FormTodo addTodo={addTodo} />\r\n        <div>\r\n          {todos.map((todo, index) => (\r\n            <Card>\r\n              <Card.Body>\r\n                <Todo\r\n                key={index}\r\n                index={index}\r\n                todo={todo}\r\n                markTodo={markTodo}\r\n                removeTodo={removeTodo}\r\n                />\r\n              </Card.Body>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n            </SettingsBlock>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListsSettings","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\ChatSettings\\Poll\\PollSettings.js",[],"C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\ChatSettings\\Poll\\SettingsBlock.js",[],"C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\helper\\MediaCard.js",["94","95","96"],"import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nexport default function MediaCard({ title, lastMessage }) {\r\n    return ( <\r\n        >\r\n        <\r\n        Card sx = {\r\n            { maxWidth: 345 } }\r\n        style = {\r\n            ({ marginTop: \"15px\" }, { backgroundColor: \"grey\" }) } >\r\n        <\r\n        CardContent >\r\n        <\r\n        Typography gutterBottom variant = \"h5\"\r\n        component = \"div\" > { \" \" } { title } { \" \" } <\r\n        /Typography>{\" \"} <\r\n        Typography variant = \"body2\"\r\n        color = \"text.secondary\"\r\n        back > { \" \" } { lastMessage } { \" \" } <\r\n        /Typography>{\" \"} <\r\n        /CardContent>{\" \"} <\r\n        /Card>{\" \"} <\r\n        />\r\n    );\r\n}","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\helper\\EmailSender.js",["97","98","99"],"// made w <3 Sk 12/4/21\r\nimport React from \"react\";\r\nimport { ChatEngine, ChatEngineWrapper } from \"react-chat-engine\";\r\n\r\nconst EmailSender = () => {\r\n    //logic here \r\n\r\n    return (\r\n        console.log(\"testing email sender\")\r\n\r\n    )\r\n\r\n}\r\n\r\nexport { EmailSender }\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\helper\\OnetoOne.js",["100"],"import React, { useState } from \"react\";\r\n\r\nimport { ChatEngine, getOrCreateChat } from \"react-chat-engine\";\r\n\r\nconst DirectChatPage = (creds) => {\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  function createDirectChat(creds) {\r\n    getOrCreateChat(\r\n      creds,\r\n      { is_direct_chat: true, usernames: [username] },\r\n      () => setUsername(\"\")\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        placeholder=\"Username\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      <button onClick={() => createDirectChat(creds)}>Create</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DirectChatPage;\r\n","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\helper\\Accordion_mini.js",["101","102","103"],"import * as React from \"react\";\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport Box from \"@mui/material/Box\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport EmojiPeopleIcon from \"@mui/icons-material/EmojiPeople\";\r\nimport { margin } from \"@mui/system\";\r\nimport { getOrCreateChat } from \"react-chat-engine\";\r\nimport { ChatEngineWrapper } from \"react-chat-engine\";\r\n\r\nexport default function SimpleAccordion({ title, people }) {\r\n  return (\r\n    <div>\r\n      <Accordion style={({ backgroundColor: \"grey\" }, { marginBlock: \"15px\" })}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography>{title}</Typography>\r\n        </AccordionSummary>\r\n\r\n        {/* render people  */}\r\n        <AccordionDetails>\r\n          {people.map((item, i) => (\r\n            <Box\r\n              style={({ backgroundColor: \"greeen\" }, { marginBottom: \"15px\" })}\r\n              sx={{ width: \"100%\", maxWidth: 360, bgcolor: \"background.paper\" }}\r\n            >\r\n              <nav aria-label=\"main mailbox folders\">\r\n                <List>\r\n                  <ListItem disablePadding>\r\n                    <ListItemButton style={{ backgroundColor: \"green\" }}>\r\n                      <ListItemIcon>\r\n                        <EmojiPeopleIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary={item} />\r\n                    </ListItemButton>\r\n                  </ListItem>\r\n                </List>\r\n              </nav>\r\n              <Divider />\r\n            </Box>\r\n          ))}\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function SimpleAccordion2({ title, body }) {\r\n  return (\r\n    <div>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography>{title}</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>{body}</Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\helper\\Input.js",[],["104","105"],"C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\helper\\LDialog.js",[],"C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\helper\\sendSKMsg.js",["106","107","108"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { ChatEngine } from \"react-chat-engine\";\r\n\r\nexport const getPeoplesName = () => {};\r\n\r\nexport const getChatID = () => {\r\n  const cchatID = 0;\r\n  const headers = {\r\n    \"Project-ID\": \"6c0acb84-1640-40bb-861c-7cb8cb4ac5e1\",\r\n    \"User-Name\": \"StephaneK\",\r\n    \"User-Secret\": \"1234\",\r\n  };\r\n\r\n  axios\r\n    .get(\"https://api.chatengine.io/chats/latest/1\", {\r\n      headers: headers,\r\n    })\r\n    .then((res) => {\r\n      //   cchatID = response.data.chatID;\r\n      //   debugger;\r\n      //   console.log();\r\n      let id = res.data[0].id;\r\n      sendMsg(id);\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Something went wrong with fetching chat id\");\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const sendMsg = (id) => {\r\n  localStorage.setItem(\"welcome\", \"true\");\r\n  //   debugger;\r\n  const link = \"https://api.chatengine.io/chats/\" + id + \"/messages/\";\r\n  const headers = {\r\n    \"Project-ID\": \"6c0acb84-1640-40bb-861c-7cb8cb4ac5e1\",\r\n    \"User-Name\": \"StephaneK\",\r\n    \"User-Secret\": \"1234\",\r\n  };\r\n\r\n  axios\r\n    .post(link, \"text=Hello StephaneK! Welcome to the CDT app.\", {\r\n      headers: headers,\r\n    })\r\n    .then((response) => {})\r\n    .catch((err) => {\r\n      console.log(\"Something went wrong with sending message\");\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n// export function{ sendMsg,  };\r\n","C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\helper\\ShowLogo.js",["109","110"],"C:\\Users\\Stephane\\Documents\\Github_Projects\\CDT\\src\\components\\helper\\GoodList.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":9,"column":8,"nodeType":"117","messageId":"118","endLine":9,"endColumn":17},{"ruleId":"115","severity":1,"message":"119","line":10,"column":10,"nodeType":"117","messageId":"118","endLine":10,"endColumn":21},{"ruleId":"115","severity":1,"message":"120","line":11,"column":10,"nodeType":"117","messageId":"118","endLine":11,"endColumn":21},{"ruleId":"115","severity":1,"message":"121","line":12,"column":8,"nodeType":"117","messageId":"118","endLine":12,"endColumn":13},{"ruleId":"115","severity":1,"message":"122","line":13,"column":10,"nodeType":"117","messageId":"118","endLine":13,"endColumn":16},{"ruleId":"115","severity":1,"message":"123","line":14,"column":10,"nodeType":"117","messageId":"118","endLine":14,"endColumn":13},{"ruleId":"115","severity":1,"message":"124","line":15,"column":8,"nodeType":"117","messageId":"118","endLine":15,"endColumn":18},{"ruleId":"115","severity":1,"message":"125","line":16,"column":8,"nodeType":"117","messageId":"118","endLine":16,"endColumn":23},{"ruleId":"115","severity":1,"message":"126","line":17,"column":8,"nodeType":"117","messageId":"118","endLine":17,"endColumn":22},{"ruleId":"115","severity":1,"message":"127","line":18,"column":10,"nodeType":"117","messageId":"118","endLine":18,"endColumn":17},{"ruleId":"128","severity":1,"message":"129","line":42,"column":45,"nodeType":"130","messageId":"131","endLine":42,"endColumn":47},{"ruleId":"115","severity":1,"message":"132","line":9,"column":8,"nodeType":"117","messageId":"118","endLine":9,"endColumn":20},{"ruleId":"115","severity":1,"message":"126","line":11,"column":8,"nodeType":"117","messageId":"118","endLine":11,"endColumn":22},{"ruleId":"115","severity":1,"message":"133","line":24,"column":11,"nodeType":"117","messageId":"118","endLine":24,"endColumn":12},{"ruleId":"115","severity":1,"message":"134","line":4,"column":21,"nodeType":"117","messageId":"118","endLine":4,"endColumn":24},{"ruleId":"115","severity":1,"message":"135","line":4,"column":26,"nodeType":"117","messageId":"118","endLine":4,"endColumn":29},{"ruleId":"115","severity":1,"message":"136","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":19},{"ruleId":"115","severity":1,"message":"137","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":17},{"ruleId":"115","severity":1,"message":"138","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":14},{"ruleId":"115","severity":1,"message":"139","line":2,"column":8,"nodeType":"117","messageId":"118","endLine":2,"endColumn":13},{"ruleId":"115","severity":1,"message":"140","line":3,"column":10,"nodeType":"117","messageId":"118","endLine":3,"endColumn":20},{"ruleId":"115","severity":1,"message":"141","line":3,"column":22,"nodeType":"117","messageId":"118","endLine":3,"endColumn":39},{"ruleId":"115","severity":1,"message":"140","line":3,"column":10,"nodeType":"117","messageId":"118","endLine":3,"endColumn":20},{"ruleId":"115","severity":1,"message":"142","line":15,"column":10,"nodeType":"117","messageId":"118","endLine":15,"endColumn":16},{"ruleId":"115","severity":1,"message":"143","line":16,"column":10,"nodeType":"117","messageId":"118","endLine":16,"endColumn":25},{"ruleId":"115","severity":1,"message":"141","line":17,"column":10,"nodeType":"117","messageId":"118","endLine":17,"endColumn":27},{"ruleId":"111","replacedBy":"144"},{"ruleId":"113","replacedBy":"145"},{"ruleId":"115","severity":1,"message":"139","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":13},{"ruleId":"115","severity":1,"message":"140","line":3,"column":10,"nodeType":"117","messageId":"118","endLine":3,"endColumn":20},{"ruleId":"115","severity":1,"message":"146","line":8,"column":9,"nodeType":"117","messageId":"118","endLine":8,"endColumn":16},{"ruleId":"115","severity":1,"message":"123","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":11},{"ruleId":"147","severity":2,"message":"148","line":11,"column":19,"nodeType":"117","messageId":"149","endLine":11,"endColumn":26},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'MediaCard' is defined but never used.","Identifier","unusedVar","'EmailSender' is defined but never used.","'sendMessage' is defined but never used.","'axios' is defined but never used.","'Report' is defined but never used.","'Box' is defined but never used.","'Typography' is defined but never used.","'SimpleAccordion' is defined but never used.","'DirectChatPage' is defined but never used.","'sendMsg' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PollSettings' is defined but never used.","'x' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'CardActions' is defined but never used.","'CardMedia' is defined but never used.","'Button' is defined but never used.","'React' is defined but never used.","'ChatEngine' is defined but never used.","'ChatEngineWrapper' is defined but never used.","'margin' is defined but never used.","'getOrCreateChat' is defined but never used.",["150"],["151"],"'cchatID' is assigned a value but never used.","no-undef","'AppLogo' is not defined.","undef","no-global-assign","no-unsafe-negation"]